extends layout

block content
  html(lang="en")
    head
      meta(charset="UTF-8")
      meta(name="viewport", content="width=device-width, initial-scale=1.0")
      link(rel="stylesheet", href="/stylesheets/style.css")
      link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css')
      link(rel='stylesheet', href='https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css')
      script(src='https://cdn.jsdelivr.net/npm/flatpickr')
      link(rel="stylesheet", href="https://fonts.googleapis.com/css2?family=Noto+Serif&display=swap")
      script(src="https://code.jquery.com/jquery-3.6.0.min.js")
    body
      header
        include header
      main
        .right-column
          .text-block(style='display: flex; justify-content: space-between; align-items: center;')
            h1.blocky #{allData.type} nº #{allData.code}
            .bts
              button#heart-button
                if user_faved
                  i.fas.fa-heart
                else
                  i.far.fa-heart
              div
                button#edit-button(type="button") Editar
                button#deleteButton(type="button") Apagar
          .text-block.blocky
            h3 Publicação:  
              a(href="/publication?pub=" + allData.publication) #{allData.publication}
            h3 Emissor:  
              a(href="/ministry?min=" + allData.ministry) #{allData.ministry}
            h3 Data de publicação:  
              - var date = new Date(allData.publication_date)
              - date.setHours(date.getHours() + 1)
              - date.setUTCHours(0); // Set the timezone to UTC
              - date = date.toISOString().split('T')[0];
              a(href="/?date=" + date) #{date}
            h3.inline-links
              a(href=allData.url) Página Oficial
              -var sep = ' | '
              a #{sep}
              a(href=allData.additional_link) PDF Oficial
              a #{sep}
              a(href=allData.pdf_link) PDF Não Oficial
          .text-block.blocky
            div.content
              p!= allData.content
              
      script.
        document.addEventListener('DOMContentLoaded', function() {
          editB();
          setupHeartButton();
        });

        function handleEditRedirect(id) {
          window.location.href = '/edit/' + id;
        }

        function handleDeleteRedirect(id) {
          window.location.href = '/delete/' + id;
        }

        function editB() {
          if (isLoggedIn()) {
            document.getElementById('deleteButton').addEventListener('click', function() {
              handleDeleteRedirect('#{allData.id}');
            });
            document.getElementById('edit-button').addEventListener('click', function() {
              handleEditRedirect('#{allData.id}');
            });
          } else {
            document.getElementById('edit-button').style.display = 'none';
            document.getElementById('deleteButton').style.display = 'none';
          }
        }
        
        function setupHeartButton() {
          const heartButton = document.getElementById('heart-button');
          const heartIcon = heartButton.querySelector('i');
          console.log('Heart button clicked');  

          heartButton.addEventListener('click', function() {
            console.log('Heart button clicked');  
            if (heartIcon.classList.contains('far')) {
              heartIcon.classList.remove('far');
              heartIcon.classList.add('fas');
            } else {
              heartIcon.classList.remove('fas');
              heartIcon.classList.add('far');
            }
            heart();
          });
        }

        async function heart() {
          try {     
            const response = await fetch('/favorite', {
              method: 'post',
              body: JSON.stringify({
                favorite: #{allData.id}
              }),
              headers: {
                'Content-Type': 'application/json'
              }
            });
            console.log('Completed!', response);
          } catch(err) {
            console.error(`Error: ${err}`);
          }
        }

      

        
